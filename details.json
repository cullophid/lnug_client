[
  {
    "apiSpeakerUrl": "https://api.github.com/users/svozza",
    "speakerUrl": "https://github.com/svozza",
    "title": "Null Can&#39;t Hurt You Anymore",
    "description": "<p>This talk follows on from @cullophid&#39;s session and seeks to build on those foundations with larger abstractions that can help developers to avoid common pitfalls when writing JavaScript such as null references (<code>Maybe</code>s), uncaught exceptions (<code>Either</code>s) and asynchronous control flow (<code>Future</code>s). These abstractions help to encapsulate uncertainty allowing us to code the happy path whilst ultimately enforcing the handling of error conditions and as the data types all share a common interface it allows us to compose them in predictable ways.&#13;&#10;&#13;&#10;Stefano Vozza is a tech lead at Trinity Mirror and has a keen interest in functional programming, DevOps and continuous delivery. He is a main contributor to several open source Javascript FP libraries such as <a href=\"https://github.com/sanctuary-js/sanctuary\">Sanctuary</a>, <a href=\"https://github.com/cullophid/date-fp\">date-fp</a> and <a href=\"https://github.com/caolan/highland\">Highland</a>. &#13;&#10;</p>\n",
    "milestone": "November 23rd 2016",
    "img": "https://avatars.githubusercontent.com/u/8573472?v=3",
    "handle": "svozza",
    "name": "Stefano Vozza"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/jc888",
    "speakerUrl": "https://github.com/jc888",
    "title": "Readable Microservices, with functional programming.",
    "description": "<p>In the final talk James Chow will talk about how the principles &#13;&#10;of functional programming aligns itself with modern distributed architectures.&#13;&#10;Join him as he builds a fully functional microservice application&#13;&#10;using our new functional programming toolbox. James shows us how all the various&#13;&#10;parts of functional programming comes together to create safe efficient code&#13;&#10;that is easily readable and extendable. &#13;&#10;&#13;&#10;James chow has been a software contractor for over 10 years.  He is currently Devops Engineer for Discovery where he manages Infrastructure, and advises on constructing applications.</p>\n",
    "milestone": "November 23rd 2016",
    "img": "https://avatars.githubusercontent.com/u/3694261?v=3",
    "handle": "jc888",
    "name": "James Chow (dsc)"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/cullophid",
    "speakerUrl": "https://github.com/cullophid",
    "title": "Keep calm and curry on",
    "description": "<p>In this first talk we will look at the fundamental principles that underpin the functional programming paradigm.&#13;&#10;&#13;&#10;We introduce some of basic techniques that makes functional programming so powerful. &#13;&#10;These are techniques you can easily apply to your codebase to increase readability and reusability.&#13;&#10;&#13;&#10;Andreas M&Oslash;ller is a London based full stack JavaScript developer. Andreas splits his time between contracting and his role as CTO of his analytics startup Sentia.&#13;&#10;</p>\n",
    "milestone": "November 23rd 2016",
    "img": "https://avatars.githubusercontent.com/u/1183585?v=3",
    "handle": "cullophid",
    "name": "Andreas Møller"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/bookercodes",
    "speakerUrl": "https://github.com/bookercodes",
    "title": "Write More Resilient JavaScript with Flow",
    "description": "<p><strong>Abstract</strong>&#13;&#10;&#13;&#10;Flow is a static type checker for JavaScript (an otherwise dynamically-typed language). You can think of it as a productivity tool that catches common errors <em>before</em> they run. &#13;&#10;&#13;&#10;Take the infamous &quot;&#39;Undefined&#39; is not a function&quot; error as an example. When writing vanilla JavaScript, you would have to wait until runtime to receive this arduous error. Flow - on the other hand - integrates with your favorite editor and analyzes the correctness of your code as you write it. If you were to reference a non-existent function, Flow would not only tell you immediately but also provide additional context that makes the error easier to fix.&#13;&#10;&#13;&#10;Whilst Flow is predominantly used with front-end technologies like React, I have been using it with great success for my Node.js projects and in this talk, I&#39;ll not only show you how to get up and running with Flow, I&#39;ll also share my experience with you. I&#39;ll also take a moment at the end of my talk to touch on the differences between Flow and TypeScript.&#13;&#10;&#13;&#10;<strong>Alex Booker</strong>&#13;&#10;&#13;&#10;Alex Booker is a Developer Advocate at <a href=\"https://pusher.com/\">Pusher</a>. There, he spends his time learning and writing about interesting, emerging technologies, and representing Pusher at events around the world. In his spare time, he runs a YouTube channel called <a href=\"https://www.youtube.com/c/codecast\">Code Cast</a> where he uploads educational screencasts about Linux and JavaScript. You can find him on Twitter <a href=\"https://twitter.com/bookercodes\">@bookercodes</a>.</p>\n",
    "milestone": "October 26th 2016",
    "img": "https://avatars.githubusercontent.com/u/11927968?v=3",
    "handle": "bookercodes",
    "name": "Booker ⚡"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/lazlojuly",
    "speakerUrl": "https://github.com/lazlojuly",
    "title": "How to build a RESTful API",
    "description": "<p>Talk agenda:&#13;&#10;1. The REST Design&#13;&#10;2. Specification&#13;&#10;3. Mocking&#13;&#10;4. Testing&#13;&#10;&#13;&#10;This talk will also look at some popular API tools.&#13;&#10;&#13;&#10;Bio: I am a JavaScript Engineer. Connect with me on <a href=\"https://twitter.com/lazlojuly\">Twitter</a>, <a href=\"https://www.linkedin.com/in/lazlojuly\">LinkedIn</a> or <a href=\"https://github.com/lazlojuly\">GitHub</a></p>\n",
    "milestone": "October 26th 2016",
    "img": "https://avatars.githubusercontent.com/u/7015868?v=3",
    "handle": "lazlojuly",
    "name": "lazlojuly"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/mikemaccana",
    "speakerUrl": "https://github.com/mikemaccana",
    "title": "Quick wins with node and Google AMP",
    "description": "<p>Google&#39;s Accelerated Mobile Pages (AMP) is a subset of HTML designed to load as quickly as possible. AMP pages keep your users happy, get you higher in search engine results pages, and related features like structured data can get you right to the top. Here&#39;s how a little node engineering can mean more money in your pocket. &#13;&#10;&#13;&#10;# Talk Description&#13;&#10;&#13;&#10;What AMP is:&#13;&#10; - What you gain (pagerank, content previews inside Google search, low latency)&#13;&#10; - What still works and what breaks (analytics, conversion tracking etc support is still ongoing)&#13;&#10;&#13;&#10;Implementing AMP in a node app:&#13;&#10;&#13;&#10; - Creating an AMP version of your existing layout&#13;&#10; - Converting output from your existing template engine to AMPHTML via server-side DOM manipulation&#13;&#10; - Handing analytics in an AMPHTML world&#13;&#10;&#13;&#10;I&#39;ve written and Open Soured some express-compatible middleware to make this job easier, see <a href=\"https://www.npmjs.com/package/amps-in-the-trunk&#13;&#10;&#13;&#10;##\">https://www.npmjs.com/package/amps-in-the-trunk&#13;&#10;&#13;&#10;##</a> Bio&#13;&#10;&#13;&#10;Mike MacCana is the founder of CertSimple, a startup that provides EV HTTPS certs - the ones where they check who you are - 40-500x faster than it&#39;s competitors. He&#39;s previously built web apps for Google, Adobe and Microsoft.</p>\n",
    "milestone": "October 26th 2016",
    "img": "https://avatars.githubusercontent.com/u/172594?v=3",
    "handle": "mikemaccana",
    "name": "Mike MacCana"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/foxreymann",
    "speakerUrl": "https://github.com/foxreymann",
    "title": "Ace JavaScript Interviews: Scoping and Hoisting",
    "description": "<p>Back to basics of JavaScript. Informative, interesting and entertaining talk. Great knowledge refreshment for those who know JavaScript. Essential education for those who never learned JavaScript properly.&#13;&#10;&#13;&#10;Node.js Developer. Web Development Trainer. Looking for new opportunities. @foxreymann</p>\n",
    "milestone": "September 28th 2016",
    "img": "https://avatars.githubusercontent.com/u/807661?v=3",
    "handle": "foxreymann",
    "name": "Fox Reymann",
    "youtubeUrl" : "https://youtu.be/hr61xyYSP6k"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/gnugat",
    "speakerUrl": "https://github.com/gnugat",
    "title": "Event Driven Architecture",
    "description": "<p>When <a href=\"https://nodejs.org/en/\">Node.Js</a> says &quot;<code>event-driven, non-blocking I/O</code>&quot;, have you ever felt it was some sort of black magic? Well in this talk we&#39;ll <a href=\"https://blog.8thlight.com/uncle-bob/2015/08/06/let-the-magic-die.html\">make the magic go away</a> by implementing our own simple HTTP server, Event Loop, Scheduler, Deferer/Promise and <a href=\"http://screencrush.com/442/files/2016/02/deadpool-2-boyfriend-pic.jpg?w=720&amp;cdnnode=1\">Thread Pool</a>.&#13;&#10;&#13;&#10;Oh, Hi by the way! I&#39;m Lo&iuml;c (it&#39;s pronounced Low-ic), a &quot;Lead Engineer&quot; (read Lead Dev) at <a href=\"http://constant.co/\">Constant Commerce</a>. You&#39;ll find that I <a href=\"https://twitter.com/epiloic\">tweet</a> and <a href=\"http://gnugat.github.io/\">blog</a> a lot about tech. I aslo <a href=\"https://github.com/gnugat\">contribute a bit</a> to FOSS projects.</p>\n",
    "milestone": "September 28th 2016",
    "img": "https://avatars.githubusercontent.com/u/793185?v=3",
    "handle": "gnugat",
    "name": "Loïc Faugeron",
    "youtubeUrl": "https://youtu.be/BwqouUxn-bg"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/tanzim",
    "speakerUrl": "https://github.com/tanzim",
    "title": "I&#39;ve got swagger. Have you?",
    "description": "<p>OpenAPI Specification, formerly known as Swagger is a well established standard for defining REST API interfaces. In this talk I&#39;d like to quickly go over Swagger, how you can integrate it with node.js and a few best practices that goes a long way to deliver robust enterprise class API service&#13;&#10;&#13;&#10;Additional links:&#13;&#10;- <a href=\"https://github.com/OAI/OpenAPI-Specification&#13;&#10;-\">https://github.com/OAI/OpenAPI-Specification&#13;&#10;-</a> <a href=\"https://github.com/swagger-api/swagger-node\">https://github.com/swagger-api/swagger-node</a></p>\n",
    "milestone": "September 28th 2016",
    "img": "https://avatars.githubusercontent.com/u/1591642?v=3",
    "handle": "tanzim",
    "name": "Tanzim",
    "youtubeUrl": "https://youtu.be/Dlo3e-0wB1E"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/dmagliola",
    "speakerUrl": "https://github.com/dmagliola",
    "title": "Harnessing the full power of Redis",
    "description": "<p>The vast majority of projects use Redis like it&#39;s Memcached, but Redis can give so much more. In this talk I&#39;ll give practical examples of use cases where Redis, with its very particular set of skills, outshines everything else I&#39;ve tried.&#13;&#10;&#13;&#10;Bio:&#13;&#10;Daniel Magliola has been writing code since he was 7 years old, professionally since 16, and through those years has dabbled in multiple technologies. These days you&#39;ll find him trying to extract every last bit of performance out of web applications.&#13;&#10;&#13;&#10;<a href=\"http://danielmagliola.com/\">Portfolio / Bio / CV / about me</a>&#13;&#10;&#13;&#10;Note on length: &#13;&#10;I <em>can</em> fly through this talk in 25 minutes, I can probably also shorten it a bit more and do it in 20 (with no time for Q&amp;A), but it&#39;s really a whirlwind. If I could have 30 or more that&#39;d make it a lot more understandable by the audience :-)&#13;&#10;&#13;&#10;Note on dates: &#13;&#10;I can do August, but not September unfortunately.</p>\n",
    "milestone": "August 24th 2016",
    "img": "https://avatars.githubusercontent.com/u/1516867?v=3",
    "handle": "dmagliola",
    "name": "Daniel Magliola"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/bernardbaker",
    "speakerUrl": "https://github.com/bernardbaker",
    "title": "NodeJS a professional case study",
    "description": "<p>Hiring people from these events work! And small NodeJS apps that get things done.&#13;&#10;&#13;&#10;When I came to a previous event I was asked if I was hiring... I was, and found a great candidate and now a new team member for our development team.&#13;&#10;&#13;&#10;She will describe her working day and the different things she has been doing with us at Sky Works since she started.&#13;&#10;&#13;&#10;After that I will take you through the build and development of a small NodeJS app which gets a single task done well. We use it to update obfuscated JavaScript files.&#13;&#10;&#13;&#10;I&#39;ll explain the project/technical/functional brief and then take you through the development in steps of progress, there will be live coding of parts of the application and an explanation of how the libraries used work.&#13;&#10;&#13;&#10;At the end I will present the live application which is hosted on Heroku.&#13;&#10;&#13;&#10;Twitter: @bernibear2000&#13;&#10;Github: bernardbaker</p>\n",
    "milestone": "August 24th 2016",
    "img": "https://avatars.githubusercontent.com/u/13556172?v=3",
    "handle": "bernardbaker",
    "name": "Bernard Baker"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/guypod",
    "speakerUrl": "https://github.com/guypod",
    "title": "Stranger Danger: addressing the security risk in npm dependencies",
    "description": "<p>Open source modules, and especially npm, are undoubtedly awesome. However, they also represent an undeniable and massive risk. You&rsquo;re introducing someone else&rsquo;s code into your system, often with little or no scrutiny. Each component may have vulnerabilities (~14% of them do!), may be compromised, or even be outright malicious. Multiply that risk by hundreds of dependencies, and you have a recipe for disaster.&#13;&#10;&#13;&#10;In this talk we&rsquo;ll show how you can mitigate this risk without losing productivity. We&rsquo;ll share more data more about the risk; show how to find &amp; fix known vulnerabilities in these dependencies; discuss how to prioritize the ones worthy of manual inspection &amp; suggest what to monitor in production. </p>\n",
    "milestone": "February 24th 2016",
    "img": "https://avatars.githubusercontent.com/u/1106394?v=3",
    "handle": "guypod",
    "name": "Guy Podjarny"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/shakyShane",
    "speakerUrl": "https://github.com/shakyShane",
    "title": "Taming Asynchronous Programming with RxJS",
    "description": "<p>Asynchronous programs can be confusing, hard to follow, difficult to debug and, quite frankly, just down right <em>annoying</em> to write. &#13;&#10;&#13;&#10;Mouse &amp; touch events in the browser, XHR requests, node&#39;s various event emitters... - what if there was a way to model all of these eventual values in the exact same way? RxJS allows us to do exactly this with the Observable. Boasting a rich set of composable operators, you can begin to unravel your spaghetti code and author declarative transformation pipelines that are simply not possible otherwise.</p>\n",
    "milestone": "February 24th 2016",
    "img": "https://avatars.githubusercontent.com/u/1643522?v=3",
    "handle": "shakyShane",
    "name": "Shane Osbourne"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/zsid",
    "speakerUrl": "https://github.com/zsid",
    "title": "How to build a real-time application with Node",
    "description": "<p>I would like to do a beginner level talk on Node. As someone who is just starting to learn Node, I want to share my experience and make a walkthrough presentation. I haven&#39;t decided whether I will be building a game or not.</p>\n",
    "milestone": "February 24th 2016",
    "img": "https://avatars.githubusercontent.com/u/11786608?v=3",
    "handle": "zsid",
    "name": "Zhivko Siderov"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/hxoliverrumbelow",
    "speakerUrl": "https://github.com/hxoliverrumbelow",
    "title": "NodeJS Supercomputing?!",
    "description": "<p>Join me in a wild adventure to take a computationally heavy single-use NodeJS application and automagically scale it across many cores and many servers in the hunt for lazy performance. Disclaimer: This is all for fun, games and science.</p>\n",
    "milestone": "January 27th 2016",
    "img": "https://avatars.githubusercontent.com/u/3088374?v=3",
    "handle": "hxoliverrumbelow",
    "name": "Oliver Rumbelow",
    "youtubeUrl": "https://youtu.be/1mYl6v0Kzt0"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/HugoDF",
    "speakerUrl": "https://github.com/HugoDF",
    "title": "Going cross-platform with React: ~1 codebase, 3 platforms",
    "description": "<p>What&#39;s the fastest way to ship a Web, iOS and Android app?&#13;&#10;&#13;&#10;React Native goes beyond making native apps with web technology. You use javascript (granted that&#39;s a web technology) to make a fully fledged React app, using native components.&#13;&#10;&#13;&#10;It&#39;s more than leveraging the power of the (state) =&gt; (UI) mapping of React. It&#39;s about code reuse. Being this DRY hurts. All the high-level logic is portable and you have <strong>one</strong> single codebase for all three target platforms. &#13;&#10;&#13;&#10;All of this is free, as long as you embrace React.</p>\n",
    "milestone": "January 27th 2016",
    "img": "https://avatars.githubusercontent.com/u/6459679?v=3",
    "handle": "HugoDF",
    "name": "Hugo",
    "youtubeUrl": "https://youtu.be/b3wYEn2r_Ac"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/philnash",
    "speakerUrl": "https://github.com/philnash",
    "title": "2FA, WTF?",
    "description": "<p>Everyone is hacking everything. Everything is vulnerable. Your site, your users, even you. Are you worried about this? You should be!&#13;&#10;&#13;&#10;Don&#39;t worry, I&#39;m not trying to scare you (that much). We have plenty of safeguards against attempts on our applications&#39; user data. We all (hopefully) recognise Two Factor Auth as one of those safeguards, but what actually goes on under the hood of 2FA?&#13;&#10;&#13;&#10;We&#39;ll take a look into generating one time passwords in JavaScript, implementing 2FA in Node.js applications and the only real life compelling use case for QR codes. Together, we&#39;ll make the web a more secure place.</p>\n",
    "milestone": "January 27th 2016",
    "img": "https://avatars.githubusercontent.com/u/31462?v=3",
    "handle": "philnash",
    "name": "Phil Nash",
    "youtubeUrl": "https://youtu.be/Wuc4Nh3lmSE"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/BenHall",
    "speakerUrl": "https://github.com/BenHall",
    "title": "Scaling Node.js using Docker",
    "description": "<p>With great load comes great scaling responsibility. If we need to scale then hopefully it means we&#39;re doing something right. The problem is how to scale without increasing complexity and re-writing the application.&#13;&#10;&#13;&#10;In this talk, Ben will discuss how he scales Katacoda.com, an online learning platform for developers. Ben will show how to deploy Node.js applications with Docker. Once deployed, Ben will highlight how to scale the processes and take advantage of container based deployments.</p>\n",
    "milestone": "November 25th 2015",
    "img": "https://avatars.githubusercontent.com/u/82614?v=3",
    "handle": "BenHall",
    "name": "Ben Hall",
    "youtubeUrl": "https://youtu.be/nBBJh75SqS4"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/fabiosantoscode",
    "speakerUrl": "https://github.com/fabiosantoscode",
    "title": "A javascript to c++ transpiler!",
    "description": "<p>A talk about an in-development javascript to c++ transpiler which currently kind of works and implements closures, numbers, objects, functions and strings.&#13;&#10;&#13;&#10;Watch it compile and run hello world, and beat node in an EPIC FIB() BENCHMARK!&#13;&#10;&#13;&#10;Be compelled by the power of tern.js to figure out what you think you&#39;re actually writing!</p>\n",
    "milestone": "November 25th 2015",
    "img": "https://avatars.githubusercontent.com/u/1611595?v=3",
    "handle": "fabiosantoscode",
    "name": "Fábio Santos",
    "youtubeUrl": "https://youtu.be/6RKxkINidvk"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/forbesmyester",
    "speakerUrl": "https://github.com/forbesmyester",
    "title": "MVP Diagrams that can do things",
    "description": "<p>A short talk on DB DiaYAML, which is a journey-to-work and weekend project for drawing simple database diagrams. It&#39;s not particularly a serious project but it scratches an itch I had and has a nice MVP feel to it. There&#39;s a blog post about it at <a href=\"http://keyboardwritescode.blogspot.co.uk/2015/07/weekend-project-db-diayaml.html\">http://keyboardwritescode.blogspot.co.uk/2015/07/weekend-project-db-diayaml.html</a> </p>\n",
    "milestone": "November 25th 2015",
    "img": "https://avatars.githubusercontent.com/u/3470771?v=3",
    "handle": "forbesmyester",
    "name": "Matt Forrester",
    "youtubeUrl": "https://youtu.be/qPCF4JUyllc"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/bananaoomarang",
    "speakerUrl": "https://github.com/bananaoomarang",
    "title": "Flux to Redux, Thinking with Data",
    "description": "<p>Flux is one of the newer cool kids on the block, but it has it&#39;s fair share of problems. With all of the different implementations fighting for recognition, to first time users and abusers it can seem overly complicated.&#13;&#10;&#13;&#10;Redux is one Flux framework which has gained a lot of traction recently, thanks to its novel take on the architecture (vastly simpler than Facebooks sample implementation, for instance) and neat debugging features.&#13;&#10;&#13;&#10;This talk can show the differences between Redux&#39;s approach and more &#39;traditional&#39; Flux architectures, running over its benefits for developers. It will also briefly explain the difference between Flux applications and other MVC implementations, for anyone curious and unfamiliar.</p>\n",
    "milestone": "October 28th 2015",
    "img": "https://avatars.githubusercontent.com/u/815831?v=3",
    "handle": "bananaoomarang",
    "name": "Milo Mordaunt",
    "youtubeUrl":"https://youtu.be/n99Jhop6K8Y"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/alistairstead",
    "speakerUrl": "https://github.com/alistairstead",
    "title": "Full-stack BDD and its side effects",
    "description": "<p>This is not yet another how do you do BDD in JavaScript talk. This is a talk about how you can apply widespread software design practices such as Design Patterns, BDD, TDD, DDD and SOLID to full-stack development. Less how to use these practices, more how to select and use them effectively.&#13;&#10;&#13;&#10;Just using these tools on their own can lead to unnecessary complexity that can be hard to understand or avoid. So let&rsquo;s set aside discussions of the language syntax or capabilities and focus on what is important - delivering value to the customer.&#13;&#10;&#13;&#10;This presentation will show how BDD practices can be applied to the different contexts of developing features through a multi-layer stack whilst smoothing the communication, providing detailed direction and showing the value for business owners and developers alike. The result is a feature that meets the business owner&rsquo;s expectations with happy side effects such as the code being clean, well designed, understandable, fully tested and documented.</p>\n",
    "milestone": "October 28th 2015",
    "img": "https://avatars.githubusercontent.com/u/62936?v=3",
    "handle": "alistairstead",
    "name": "Alistair Stead",
    "youtubeUrl":"https://youtu.be/YP_YIH4GoGE"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/tomgco",
    "speakerUrl": "https://github.com/tomgco",
    "title": "White water streams",
    "description": "<p>We use streams on a daily basis when handling data with our Node.js applications, but how do they work, and more importantly, how do we keep them efficient and performant?&#13;&#10;&#13;&#10;This talk focus mainly on analysing applications that utilises streaming data, identifying bottlenecks and making improvements. Be wow&rsquo;ed by Flame{graphs,charts}, awed by benchmarks and take away some tips in writing decent stream implementations.</p>\n",
    "milestone": "October 28th 2015",
    "img": "https://avatars.githubusercontent.com/u/524382?v=3",
    "handle": "tomgco",
    "name": "Tom Gallacher",
    "youtubeUrl":"https://youtu.be/iBEjz38ppe4"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/bodil",
    "speakerUrl": "https://github.com/bodil",
    "title": "The Miracle of Generators",
    "description": "<p>The ECMAScript 2015 specification introduced <em>iterators</em>, which generalise iteration over common data structures, as well as providing an interface for allowing you to iterate over any custom data structures using common language constructs. ES2015 also introduced <em>generator functions</em>, which make writing arbitrary iterators a lot easier and less boilerplatey.&#13;&#10;&#13;&#10;But generators aren&#39;t just for making simple iterators over data structures. Because they&#39;re bidirectional&mdash;they don&#39;t only produce output, they can also take input&mdash;they&#39;re actually <em>coroutines</em>, which means there&#39;s no end to the sort of fun you can apply them to. We&#39;re going to explore how we can use them to make asynchronous programming in JavaScript a lot more elegant&mdash;to chart a path out of callback hell. And then we&#39;re going to take a look at what we&#39;ve really discovered: one of the most fearsome mysteries of computer science, suddenly laid bare before us.</p>\n",
    "milestone": "September 23rd 2015",
    "img": "https://avatars.githubusercontent.com/u/17880?v=3",
    "handle": "bodil",
    "name": "Bodil Stokke"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/hassy",
    "speakerUrl": "https://github.com/hassy",
    "title": "Load-testing for fun and profit",
    "description": "<p>This talk will (briefly) outline why load-testing should be a part of your testing activities and then dive into an overview of tooling and strategies &amp; processes to get the most out of it when working on a production system. We&#39;ll also explore how load-testing can improve our understanding of both our own code and components that our code depends on.</p>\n",
    "milestone": "September 23rd 2015",
    "img": "https://avatars.githubusercontent.com/u/1490?v=3",
    "handle": "hassy",
    "name": "hassy veldstra"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/burtonjc",
    "speakerUrl": "https://github.com/burtonjc",
    "title": "How Waffle.io separated its API from its core web app",
    "description": "<p>At Waffle.io, we recently built a public API to gain access to Waffle&#39;s data (in private beta now). We knew we wanted the API to be deployed, scaled, and monitored separately from our core app. We also wanted the app to use the same API we were providing to our users. Carving the API out as its own service consumed by our app provided some interesting challenges and produced some surprising benefits. This talk will describe the design we came up with, the challenges we faced, and the largely unexpected benefits we received.</p>\n",
    "milestone": "September 23rd 2015",
    "img": "https://avatars.githubusercontent.com/u/443084?v=3",
    "handle": "burtonjc",
    "name": "Jacob Burton"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/tjanczuk",
    "speakerUrl": "https://github.com/tjanczuk",
    "title": "Rethinking backend with webtasks",
    "description": "<p>You are writing a mobile or HTML5 web application that needs just a little bit of a backend. Maybe you want to access MongoDB, send an SMS, or an e-mail. Do you really need to host your own Node.js service to run this small snippet of backend logic?&#13;&#10;&#13;&#10;In this talk I will take a hard look at the role of the backend in modern applications. I will introduce the concept of a <a href=\"https://webtask.io\">webtask</a> - a lightweight representation of backend logic that can safely be embedded in a client application. I will show how you can use modern container technologies based on CoreOS and Docker to build a generic, multi-tenant runtime for securely executing webtasks directly from a mobile or HTML5 application. You don&rsquo;t need a backend to run backend code.&#13;&#10;&#13;&#10;This talk is based on lessons learned when building the Node.js sandboxing technology for internal use in our core operations at Auth0.&#13;&#10;&#13;&#10;Find out more:&#13;&#10;<a href=\"http://tomasz.janczuk.org/2015/04/rethinking-backend-with-webtasks.html\">Webtask concepts</a>&#13;&#10;<a href=\"https://github.com/auth0/wt-cli\">Webtask CLI</a>&#13;&#10;<a href=\"https://webtask.io\">Webtask playground</a>&#13;&#10;<a href=\"https://medium.com/aws-activate-startup-blog/sandboxing-code-in-the-era-of-containers-294edb3a674\">Webtask technology</a>&#13;&#10;</p>\n",
    "milestone": "August 26th 2015",
    "img": "https://avatars.githubusercontent.com/u/822369?v=3",
    "handle": "tjanczuk",
    "name": "Tomasz Janczuk",
    "youtubeUrl":"https://youtu.be/bhQ3Ov4niPs"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/danjenkins",
    "speakerUrl": "https://github.com/danjenkins",
    "title": "WebRTC Reborn",
    "description": "<p>WebRTC has had a real tough 3 or 4 years, and so have those working with it. Only a few short years ago, the development world were excited about WebRTC and proclaiming how awesome it was. &#13;&#10;&#13;&#10;You might have played with the technology a couple of years ago, only to find the extra infrastructure requirements were painful to implement and poorly documented. This probably left a bitter taste in your mouth, especially when things went wrong.&#13;&#10;&#13;&#10;Those in the industry have been working hard to sweeten the deal again - efforts have been made to bring WebRTC into the mainstream and as a result the technology is experiencing a rebirth. Thanks to those who have remained dedicated to improving the situation for those around them, WebRTC is finally starting to fulfil the original expectations that were had of it. Both the technology and the support networks have been built up to make experimenting with it again a pleasure, not a pain.&#13;&#10;&#13;&#10;WebRTC has grown up; in this talk you will learn how far along the tech has come, its current capabilities, the amazing things that people are starting to do with it, and how simple getting started with the new toolsets available.&#13;&#10;</p>\n",
    "milestone": "August 26th 2015",
    "img": "https://avatars.githubusercontent.com/u/243117?v=3",
    "handle": "danjenkins",
    "name": "Dan Jenkins",
    "youtubeUrl": "https://youtu.be/tB9z4ZOoSwg"
  },
  {
    "apiSpeakerUrl": "https://api.github.com/users/pimterry",
    "speakerUrl": "https://github.com/pimterry",
    "title": "TypeScript will finally bring peace to your troubled soul",
    "description": "<p>You&#39;ve heard of TypeScript, but you&#39;re not sure if it&#39;s a good idea, and you&#39;ve never really seen it in action. TypeScript is powerful though, rapidly gaining momentum, and has a lot more to offer than just JS + classes. Let&#39;s take a proper look.&#13;&#10;&#13;&#10;In this talk, we&#39;ll dig a bit deeper and play around with some of the more interesting features TypeScript gives you. We&#39;ll walk through the extras that TypeScript provides and how they&#39;ll solve your every woe, learn a bit about where the types come in and why you care, and see how exactly you might put it into action on your next Node project.</p>\n",
    "milestone": "August 26th 2015",
    "img": "https://avatars.githubusercontent.com/u/1526883?v=3",
    "handle": "pimterry",
    "name": "Tim Perry",
    "youtubeUrl":"https://youtu.be/UI9cgrMxGi0"
  }
]
